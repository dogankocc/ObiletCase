@using ObiletService.Core.Application.Features.Queries.BusLocation.List

@{
    Layout = "~/Views/Shared/_layouth.cshtml";
    ViewData["Title"] = "Index";
}
@model GetBusLocationQueryResponse

 <style>
    .navbar-custom {
        height: 50px; 
     
    }

  </style>
<link rel="stylesheet" href="~/css/flatpickr.min.css">

<div class="d-flex align-items-center justify-content-center vh-100">

    <div class="container-lg">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg navbar-dark bg-primary navbar-custom mb-5">

            </nav>
            <div class="list-group rounded-0 position-relative">
                <div class="dropdown">
                    <div class="list-group-item list-group-item-action" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <div class="w-100">
                            <h5 class="mb-1">Nereden</h5>
                            <p id="selected_from_location" class="mb-1" data-selected-from-location-id="@Model.Data[0].Id">@Model.Data[0].Name</p>
                        </div>
                    </div>

                    <ul class="dropdown-menu">
                        @foreach (var location in Model.Data)
                        {
                            <li id="from_location_@location.Id" onclick="handleSelectFromLocation(event, @location.Id)"><a class="dropdown-item" href="#">@location.Name</a></li>
                        }
                    </ul>
                </div>
                <div class="mt-2"></div>
                <button class="position-absolute" style="right: 0;z-index: 999;top: 62px;" onclick="handleShiftLocations(event)">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down-up" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M11.5 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L11 2.707V14.5a.5.5 0 0 0 .5.5m-7-14a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L4 13.293V1.5a.5.5 0 0 1 .5-.5" />
                    </svg>
                </button>
         
                <div class="dropdown">
                    <div class="list-group-item list-group-item-action" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <div class="w-100">
                            <h5 class="mb-1">Nereye</h5>
                            <p id="selected_to_location" class="mb-1" data-selected-to-location-id="@Model.Data[1].Id">@Model.Data[1].Name</p>
                        </div>
                    </div>

                    <ul class="dropdown-menu">
                        @foreach (var location in Model.Data)
                        {
                            <li id="to_location_@location.Id" onclick="handleSelectToLocation(event, @location.Id)"><a class="dropdown-item" href="#">@location.Name</a></li>
                        }
                    </ul>
                </div>
                <div class="mt-2"></div>

                <div class="list-group-item list-group-item-action" type="button" aria-expanded="false" onclick="handleClickDate(event)">
                    <div class="w-100">
                        <h5 class="mb-1">Tarih</h5>
                        <p id="selected_date" class="mb-1"></p>
                    </div>
                    <input type="text" id="date-input" name="tarih" style="opacity: 0; position: absolute;">
                </div>
            </div>
        </div>
  
    </div>
  </div>

<script src="~/js/flatpickr.min.js"></script>
<script src="~/js/flatpickr_tr.js"></script>
  <script>
    document.addEventListener("DOMContentLoaded", function () {
        let tomorrow = new Date();
        tomorrow.setDate(tomorrow.getDate() + 1);

        let day = String(tomorrow.getDate()).padStart(2, "0");
        let month = String(tomorrow.getMonth() + 1).padStart(2, "0");
        let year = tomorrow.getFullYear();

        let formattedDate = `${day}-${month}-${year}`;

        document.getElementById("selected_date").innerText = formattedDate;

        flatpickr("#date-input", {
            defaultDate: tomorrow,
            dateFormat: "d-m-Y",
            locale: "tr",
            onChange: function (selectedDates, dateStr, instance) {
                console.log(dateStr)
                document.getElementById("selected_date").innerText = dateStr;
            }
        });
    });

    function handleSelectFromLocation(event, locationId){

        var selectedToLocationId = document.getElementById("selected_to_location").getAttribute("data-selected-to-location-id");

        if (selectedToLocationId == locationId)
            return;

        var selectedFromLocationElement = document.getElementById("selected_from_location");

        selectedFromLocationElement.innerText = event.target.innerText;
        selectedFromLocationElement.setAttribute("data-selected-from-location-id", locationId);
    }

    function handleSelectToLocation(event, locationId) {

        var selectedFromLocationId = document.getElementById("selected_from_location").getAttribute("data-selected-from-location-id");

        if (selectedFromLocationId == locationId)
            return;

        var selectedToLocationElement = document.getElementById("selected_to_location");

        selectedToLocationElement.innerText = event.target.innerText;
        selectedToLocationElement.setAttribute("data-selected-to-location-id", locationId);
    }

      function handleShiftLocations(event) {
        var selectedFromLocationElement = document.getElementById("selected_from_location");
        var selectedFromLocationId = selectedFromLocationElement.getAttribute("data-selected-from-location-id");
        var fromLocationName = selectedFromLocationElement.innerText;

        var selectedToLocationElement = document.getElementById("selected_to_location");
        var selectedToLocationId = selectedToLocationElement.getAttribute("data-selected-to-location-id");
        var toLocationName = selectedToLocationElement.innerText;

        selectedToLocationElement.innerText = fromLocationName;
        selectedToLocationElement.setAttribute("data-selected-to-location-id", selectedFromLocationId);

        selectedFromLocationElement.innerText = toLocationName;
        selectedFromLocationElement.setAttribute("data-selected-from-location-id", selectedToLocationId);

      }

      function handleClickDate(event) {
        var dateInput = document.getElementById("date-input");
        dateInput.click()

        console.log(dateInput.value)

      }
  </script>
